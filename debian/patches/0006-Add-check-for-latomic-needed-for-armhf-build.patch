From: Jason Rhinelander <jason@imaginary.ca>
Date: Mon, 26 Aug 2019 23:19:18 -0300
Subject: Add check for -latomic (needed for armhf build)

---
 CMakeLists.txt           |  3 +++
 cmake/check_atomic.cmake | 39 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+)
 create mode 100644 cmake/check_atomic.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4530cf2..df6e92a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -756,6 +756,9 @@ else()
   # At least some CLANGs default to not enough for monero
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ftemplate-depth=900")
 
+  include(cmake/check_atomic.cmake)
+  link_libatomic()
+
   if(STATIC)
     # STATIC already configures most deps to be linked in statically,
     # here we make more deps static if the platform permits it
diff --git a/cmake/check_atomic.cmake b/cmake/check_atomic.cmake
new file mode 100644
index 0000000..ab309aa
--- /dev/null
+++ b/cmake/check_atomic.cmake
@@ -0,0 +1,39 @@
+
+function(check_working_cxx_atomics64 varname)
+  set(OLD_CMAKE_REQUIRED_FLAGS ${CMAKE_REQUIRED_FLAGS})
+  set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -std=c++11")
+  check_cxx_source_compiles("
+#include <atomic>
+#include <cstdint>
+std::atomic<uint64_t> x (0);
+int main() {
+  uint64_t i = x.load(std::memory_order_relaxed);
+  return 0;
+}
+" ${varname})
+  set(CMAKE_REQUIRED_FLAGS ${OLD_CMAKE_REQUIRED_FLAGS})
+endfunction()
+
+function(link_libatomic)
+  check_working_cxx_atomics64(HAVE_CXX_ATOMICS64_WITHOUT_LIB)
+
+  if(HAVE_CXX_ATOMICS64_WITHOUT_LIB)
+    message(STATUS "Have working 64bit atomics")
+    return()
+  endif()
+
+  check_library_exists(atomic __atomic_load_8 "" HAVE_CXX_LIBATOMICS64)
+  if (HAVE_CXX_LIBATOMICS64)
+    message(STATUS "Have 64bit atomics via library")
+    list(APPEND CMAKE_REQUIRED_LIBRARIES "atomic")
+    check_working_cxx_atomics64(HAVE_CXX_ATOMICS64_WITH_LIB)
+    if (HAVE_CXX_ATOMICS64_WITH_LIB)
+      message(STATUS "Can link with libatomic")
+      link_libraries(atomic)
+      return()
+    endif()
+  endif()
+
+  message(FATAL_ERROR "Host compiler must support 64-bit std::atomic!")
+endfunction()
+
